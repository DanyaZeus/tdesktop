name: 'Create Release'

on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Prerelease or not'
        required: true
        default: 'true'
      windowsWorkflow:
        description: 'Windows run id, optional'
        type: string
        required: false
        default: ""
      linuxWorkflow:
        description: 'Linux run id, optional'
        type: string
        required: false
        default: ""
      snapWorkflow:
        description: 'Snap run id, optional'
        type: string
        required: false
        default: ""
      macWorkflow:
        description: 'MacOS run id, optional'
        type: string
        required: false
        default: ""
      version:
        description: 'Release version'
        type: string
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - id: parsing_step
        run: |
          wget https://raw.githubusercontent.com/wrwrabbit/tdesktop/master/Telegram/build/ptelegram_release_body.py
          wget https://raw.githubusercontent.com/wrwrabbit/tdesktop/master/ptelegram_changelog.md

          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Prepare changelog
        run: |
          python3 ptelegram_release_body.py --input_file ptelegram_changelog.md --output_file ptelegram_changelog_${{ env.VERSION }}.md --version ${{ env.VERSION }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v.${{ env.VERSION }}"
          release_name: "Version ${{ env.VERSION }}"
          body_path: ptelegram_changelog_${{ env.VERSION }}.md
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}

      - name: Download Windows artifacts
        uses: dawidd6/action-download-artifact@v2
        if: github.event.inputs.windowsWorkflow != ''
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: win.yml
          workflow_conclusion: success
          run_id: ${{ github.event.inputs.windowsWorkflow }}
          repo: wrwrabbit/tdesktop
          path: Windows

      - name: Download Linux artifacts
        uses: dawidd6/action-download-artifact@v2
        if: github.event.inputs.linuxWorkflow != ''
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: linux.yml
          workflow_conclusion: success
          run_id: ${{ github.event.inputs.linuxWorkflow }}
          repo: wrwrabbit/tdesktop
          path: Linux

      - name: Download MacOS artifacts
        uses: dawidd6/action-download-artifact@v2
        if: github.event.inputs.macWorkflow != ''
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: mac.yml
          workflow_conclusion: success
          run_id: ${{ github.event.inputs.macWorkflow }}
          repo: wrwrabbit/tdesktop
          path: MacOS
          
      - name: Download Snap artifacts
        uses: dawidd6/action-download-artifact@v2
        if: github.event.inputs.snapWorkflow != ''
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: snap.yml
          workflow_conclusion: success
          run_id: ${{ github.event.inputs.snapWorkflow }}
          repo: wrwrabbit/tdesktop
          path: Snap

      - name: Upload Windows Files
        uses: softprops/action-gh-release@v1
        if: github.event.inputs.windowsWorkflow != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v.${{ env.VERSION }}"
          name: "Version ${{ env.VERSION }}"
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            Windows/**

      - name: Upload Linux Files
        uses: softprops/action-gh-release@v1
        if: github.event.inputs.linuxWorkflow != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v.${{ env.VERSION }}"
          name: "Version ${{ env.VERSION }}"
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            Linux/**

      - name: Upload Snap Files
        uses: softprops/action-gh-release@v1
        if: github.event.inputs.snapWorkflow != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v.${{ env.VERSION }}"
          name: "Version ${{ env.VERSION }}"
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            Snap/**

      - name: Upload MacOS Files
        uses: softprops/action-gh-release@v1
        if: github.event.inputs.macWorkflow != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v.${{ env.VERSION }}"
          name: "Version ${{ env.VERSION }}"
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            MacOS/**
